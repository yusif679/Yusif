#include <iostream>
using namespace std;
template <typename T> class vectorClass
{

  
    T* arr;

   
    // capacity of the vector
    int capacity;

    
    // currently present in the vector
    int current;

our_vector:
   
    // allocating storage using dynamic allocation
    vectorClass()
    {
        arr = new T[1];
        capacity = 1;
        current = 0;
    }

    // Function to add an element at the last
    void push(T data)
    {

        
        if (current == capacity) {
            T* temp = new T[2 * capacity];

            // Copying new array
            for (int i = 0; i < capacity; i++) {
                temp[i] = arr[i];
            }

            // Deallocation
            delete[] arr;
            capacity *= 2;
            arr = temp;
        }

        // Inserting data
        arr[current] = data;
        current++;
    }

    // function to add element at any index
    void push(int data, int index)
    {

        if (index == capacity)
            push(data);
        else
            arr[index] = data;
    }

    // function to extract element 
    T get(int index)
    {

        
        if (index < current)
            return arr[index];
    }

    // function to delete last element
    void pop() { current--; }

    
    int size() { return current; }

    
    int getcapacity() { return capacity; }

    
    void print()
    {
        for (int i = 0; i < current; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

// Driver code
int main()
{
    vectorClass<int> v;
    vectorClass<char> v1;
    v.push(15);
    v.push(25);
    v.push(35);
    v.push(45);
    v.push(55);
    v1.push(80);
    v1.push(81);
    v1.push(82);
    v1.push(82);

    cout << "Vector size : " << v.size() << endl;
    cout << "Vector capacity : " << v.getcapacity() << endl;

    cout << "Vector elements : ";
    v.print();

    v.push(100, 1);

    cout << "After updating 1st index"<<endl;


    cout << "Vector elements of type int : " << endl;
    v.print();
  
    cout << "Vector elements of type char : " << endl;
    v1.print();
    cout << "Element at 1st index of type int: " << v.get(1)
        << endl;
    cout << "Element at 1st index of type char: "
        << v1.get(1) << endl;

    v.pop();
    v1.pop();

    cout << "\nAfter deleting last element" << endl;

    cout << "Vector size of type int: " << v.size() << endl;
    cout << "Vector size of type char: " << v1.size()
        << endl;
    cout << "Vector capacity of type int : "
        << v.getcapacity() << endl;
    cout << "Vector capacity of type char : "
        << v1.getcapacity() << endl;

    cout << "Vector elements of type int: ";
    v.print();
    cout << "Vector elements of type char: ";
    v1.print();

    return 0;
}
